type SimpleResponse {
  success: Boolean!
  message: String
}

type RequestConfirmEmailResponse {
  flowKey: String
}

type Session {
  auth: Auth
  message: String
}
type Auth {
  sessionAccount: SessionAccount
}

type SessionAccount @key(selectionSet: "{ username }") {
  username: String!
  email: String!
  changeEmailRequest: String
  accountId: String!
}

type Mutation {
  signUp(email: String!): SimpleResponse!
  activateAccount(
    username: String!
    password: String!
    token: String!
  ): Session!
  changeEmailRequest(newEmail: String!): SimpleResponse!
  changeEmailConfirm(
    token: String!
    password: String!
    username: String!
  ): Boolean!
  changePassword(
    newPassword: String!
    currentPassword: String!
  ): SimpleResponse!
  sessionByEmail(username: String!, email: String!): SimpleResponse!
  createSession(username: String!, password: String!): Session
}

type Query {
  _null_placeholder_for_useraccount: Boolean
}
