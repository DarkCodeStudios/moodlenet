interface IUserFollowsUser {
  ufu: String!
}

type UserFollowsUser implements GraphEdge & IUserFollowsUser & Follows {
  _id: ID!
  # _from: User!
  # _to: User!
  cursor: String!
  node: User!
  since: Int!
  ufu: String!
}

type UserFollowsUserPage implements Page @access(level: [OWNER]) {
  pageInfo: PageInfo!
  edges: [UserFollowsUser!]!
}

type User {
  followsUsers(page: PageInput): UserFollowsUserPage! @access(level: [OWNER])
  followers(page: PageInput): UserFollowsUserPage!
}

type Mutation {
  followUser(userId: ID): UserFollowsUser
}
