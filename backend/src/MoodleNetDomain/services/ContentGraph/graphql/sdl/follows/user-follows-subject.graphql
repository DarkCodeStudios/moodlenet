interface IUserFollowsSubject {
  ufs: String!
}

type UserFollowsSubject implements GraphEdge & IUserFollowsSubject & Follows {
  _id: ID!
  # _from: User!
  # _to: Subject!
  cursor: String!
  ufs: String!
  since: Int!
  node: Subject!
}

type UserFollowsSubjectPage implements Page {
  pageInfo: PageInfo!
  edges: [UserFollowsSubject!]!
}

type SubjectFollower implements GraphEdge & IUserFollowsSubject & Follows {
  _id: ID!
  # _from: User!
  # _to: Subject!
  cursor: String!
  ufs: String!
  since: Int!
  node: User!
}

type SubjectFollowersPage implements Page {
  pageInfo: PageInfo!
  edges: [SubjectFollower!]!
}

type User {
  followsSubjects(page: PageInput): UserFollowsSubjectPage!
}

type Subject {
  followers(page: PageInput): SubjectFollowersPage!
}

type Mutation {
  followSubject(subjectId: ID): UserFollowsSubject
}
