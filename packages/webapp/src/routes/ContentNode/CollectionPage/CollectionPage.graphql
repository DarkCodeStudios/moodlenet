query CollectionPageNode($id: ID!) {
  node(_id: $id) {
    ... on Collection {
      _id
      name
      summary
      icon
      myFollow: _rel(edge: { type: Follows, node: Profile, inverse: true, targetMe: true }, page: { first: 1 }) {
        ...JustEdgeIdRelPage
      }
      _meta {
        created
        creator {
          _id
          name
          icon
        }
        relCount {
          Follows {
            from {
              Profile
            }
          }
          Contains {
            to {
              Resource
            }
          }
        }
      }
    }
  }
}

query CollectionPageResources($id: ID!) {
  node(_id: $id) {
    ... on INode {
      _id
      resourceList: _rel(edge: { type: Contains, node: Resource }, page: { first: 10 }) {
        edges {
          node {
            ... on Resource {
              _id
              name
              icon
              collections: _rel(edge: { type: Contains, node: Collection, inverse: true }, page: { first: 2 }) {
                edges {
                  node {
                    ... on Collection {
                      _id
                      name
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

mutation CollectionPageFollow($currentProfileId: ID!, $collectionId: ID!) {
  createEdge(input: { edgeType: Follows, from: $currentProfileId, to: $collectionId, Follows: {} }) {
    ...BasicCreateEdgeMutationPayload
  }
}

fragment BasicCreateEdgeMutationPayload on CreateEdgeMutationPayload {
  ... on CreateEdgeMutationSuccess {
    edge {
      ... on IEdge {
        _id
      }
    }
  }
  ... on CreateEdgeMutationError {
    type
    details
  }
}

mutation CollectionPageUnfollow($myFollowEdgeId: ID!) {
  deleteEdge(input: { _id: $myFollowEdgeId, edgeType: Follows }) {
    ...BasicDeleteEdgeMutationPayload
  }
}

fragment BasicDeleteEdgeMutationPayload on DeleteEdgeMutationPayload {
  ... on DeleteEdgeMutationSuccess {
    edgeId
  }
  ... on DeleteEdgeMutationError {
    type
    details
  }
}
