input EdgeTypeInput {
  type: EdgeType!
  node: NodeType!
  inverse: Boolean
  targetMe: Boolean
  targetIDs: [ID!]
}

type RelPage implements Page {
  pageInfo: PageInfo!
  edges: [RelPageEdge!]!
}

type RelPageEdge implements PageEdge {
  cursor: Cursor!
  edge: IEdge!
  node: INode!
}

interface INode {
  _rel(edge: EdgeTypeInput!, page: PaginationInput): RelPage!
  _relCount(type: EdgeType!, target: NodeType!, inverse: Boolean): Int!
}

# integrate nodes

type Profile {
  _rel(edge: EdgeTypeInput!, page: PaginationInput): RelPage!
  _relCount(type: EdgeType!, target: NodeType!, inverse: Boolean): Int!
}

type Collection {
  _rel(edge: EdgeTypeInput!, page: PaginationInput): RelPage!
  _relCount(type: EdgeType!, target: NodeType!, inverse: Boolean): Int!
}

type Resource {
  _rel(edge: EdgeTypeInput!, page: PaginationInput): RelPage!
  _relCount(type: EdgeType!, target: NodeType!, inverse: Boolean): Int!
}

type Subject {
  _rel(edge: EdgeTypeInput!, page: PaginationInput): RelPage!
  _relCount(type: EdgeType!, target: NodeType!, inverse: Boolean): Int!
}
