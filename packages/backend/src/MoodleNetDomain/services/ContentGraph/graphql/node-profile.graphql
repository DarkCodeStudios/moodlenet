type Profile implements INode & IContentNode {
  name: String!
  summary: String!
  icon: String
  _id: ID!
  _meta: NodeMeta!
  _rel(edge: EdgeTypeInput!, page: PaginationInput): RelPage!
}

union Node = Profile
enum NodeType {
  Profile
}
type RelCountTargetMap {
  Profile: Int
}
input UpdateNodeInput {
  Profile: UpdateProfileInput
}
input UpdateProfileInput {
  name: String!
  summary: String!
  icon: String
}
input CreateNodeInput {
  Profile: CreateProfileInput
}
input CreateProfileInput {
  name: String!
  summary: String!
  icon: String
}
