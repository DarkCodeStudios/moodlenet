type Profile implements INode & IContentNode {
  name: String!
  summary: String!
  icon: String
  id: ID!
}

input UpdateProfileInput {
  name: String!
  summary: String!
  icon: String
}

input CreateProfileInput {
  name: String!
  summary: String!
  icon: String
}

# integrations
union Node = Profile
enum NodeType {
  Profile
}
input UpdateNodeInput {
  Profile: UpdateProfileInput
}
input CreateNodeInput {
  Profile: CreateProfileInput
}
