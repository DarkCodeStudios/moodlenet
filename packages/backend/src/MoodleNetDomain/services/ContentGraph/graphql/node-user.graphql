type User implements INode & IContentNode {
  name: String!
  summary: String!
  icon: String
  _id: ID!
  _meta: NodeMeta!
  _rel(edge: EdgeTypeInput!, page: PaginationInput, sort: [NodeRelSort!]): RelPage!
}

union Node = User
enum NodeType {
  User
}
type RelCountTargetMap {
  User: Int
}
input UpdateNodeInput {
  User: UpdateUserInput
}
input UpdateUserInput {
  name: String!
  summary: String!
  icon: String
}
input CreateNodeInput {
  User: CreateUserInput
}
input CreateUserInput {
  name: String!
  summary: String!
  icon: String
}
