scalar Cursor

interface IContentNode {
  name: String!
  summary: String!
  icon: String
}

interface INode {
  _id: ID
  _rel(edge: EdgeTypeInput!, page: PaginationInput): RelPage!
  _meta: NodeMeta!
}

type NodeMeta {
  creator: Profile!
  created: DateTime!
  updated: DateTime!
  relCount: RelCountMap
}

type EdgeMeta {
  creator: Profile!
  created: DateTime!
  updated: DateTime!
}

type RelCount {
  to: RelCountTargetMap
  from: RelCountTargetMap
}

interface IEdge {
  _id: ID
  _meta: EdgeMeta
}

input EdgeTypeInput {
  type: EdgeType!
  node: NodeType!
  inverse: Boolean
  targetMe: Boolean
}

type RelPage implements Page {
  pageInfo: PageInfo!
  edges: [RelPageEdge!]!
}

type RelPageEdge implements PageEdge {
  cursor: Cursor!
  edge: IEdge!
  node: INode!
}
